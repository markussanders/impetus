{"version":3,"sources":["components/Time.js","components/Clock.js","components/FocusForm.js","components/Focus.js","components/Welcome.js","components/Weather.js","components/Background.js","App.js","serviceWorker.js","index.js"],"names":["Time","props","_isMounted","getTime","dateTime","Date","minutes","getMinutes","String","length","time","getHours","setState","greet","state","this","setInterval","id","React","Component","Clock","showMantra","newTime","parseInt","replace","greeting","renderDropdown","className","onClick","setMantra","updateCurrentUser","mantra","localStorage","getItem","fetch","then","resp","json","setItem","message","currentUser","isMounted","onSubmit","e","preventDefault","setUser","placeholder","onChange","target","value","renderGreetingWithForm","renderGreeting","FocusForm","focus","tasks","setMainFocus","Focus","completed","mainFocus","Welcome","name","url","weatherObj","JSON","parse","Weather","fetchWeather","temp","convertToFahrenheit","main","weatherDesc","formatDesc","weather","description","location","Math","floor","desc","split","map","word","toUpperCase","substring","join","Background","photographer","imgUrl","getPhoto","urls","full","user","src","alt","App","promptUserName","retreiveUser","renderFocusForm","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a8e1f03.chunk.js","sourcesContent":["import React from 'react';\n\nclass Time extends React.Component {\n   _isMounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: '',\n        }\n    }\n    \n    componentDidMount() {\n        this._isMounted = true;\n        if (this._isMounted) {\n            this.getTime();\n            setInterval(() => {\n                this.getTime();\n            }, 1000);\n        }\n    }\n\n    getTime = () => {\n        let dateTime = new Date();\n        let minutes = dateTime.getMinutes();\n        minutes = String(minutes).length === 1 ? `0${minutes}` : minutes;\n        let time = `${dateTime.getHours()}:${minutes}`;\n        this.setState({time});\n        if (this.props.greet && this._isMounted) this.props.greet(time);\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render(){\n        return (\n            <h2 id=\"clock\">{this.state.time}</h2>\n        )\n    }\n}\n\n\nexport default Time;","import React from 'react';\nimport Time from './Time';\n\n\nclass Clock extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: localStorage.getItem('user'),\n            greeting: localStorage.getItem('mantra') || '',\n            showMantra: false,\n            time: '',\n            renderDropdown: false,\n            isMounted: false,\n            updateCurrentUser: false,\n        }\n    }\n\n    greet = time => {\n        if (!this.state.showMantra) {\n            let newTime = parseInt(time.replace(':', ''));\n            let greeting =  newTime < 1200 ? 'Good Morning': newTime > 1700 ? 'Good Evening' : 'Good Afternoon';\n            // this.state.currentUser ? this.setState({greeting: `${greeting}, ${this.state.currentUser}.`}) : this.setState({ greeting });\n            this.setState({ greeting });\n        }\n    }\n\n    renderDropdown = () => {\n        if (!this.state.showMantra) {\n            return (\n                <ul id=\"more-options-list\">\n                    <li className=\"more-options-item\" onClick={() => this.setMantra()}>Show today's mantra</li>\n                    <li className=\"more-options-item\" onClick={() => {\n                        this.setState({updateCurrentUser: !this.state.updateCurrentUser})\n                        }}>Edit your name</li>\n                </ul>\n            )\n        } else {\n            return (\n                <ul id=\"more-options-list\">\n                    <li className=\"more-options-item\" onClick={() => this.setState({showMantra: false, renderDropdown: false})}>Hide today's mantra</li>\n                </ul>\n            )\n        }\n    }\n    \n    setMantra = () => { \n        let mantra = localStorage.getItem('mantra');\n        if (mantra) {\n            this.setState({\n                greeting: mantra,\n                showMantra: true,\n                renderDropdown: false,\n            });\n        } else {\n            fetch(\"https://horizonshq.herokuapp.com/api/inspirationalquotes\")\n                .then(resp => resp.json())\n                .then(mantra => {\n                    localStorage.setItem('mantra', mantra.message);\n                    this.setMantra();\n                })\n        }\n    }\n\n    componentDidMount() {\n        this.setState({isMounted: true});\n    }\n\n    renderGreeting() {\n        const greeting = this.state.greeting;\n        return (\n            < h3 id = \"greeting\" > {\n                this.state.showMantra ? greeting : `${greeting}, ${this.state.currentUser}.`\n            }\n                <button id=\"more-options\" onClick={() => this.setState({renderDropdown: !this.state.renderDropdown})}> ••• </button>\n            </h3>\n        )\n    }\n\n    renderGreetingWithForm() {\n        const greeting = this.state.greeting;\n        return (\n            <h3 id=\"greeting\"> {`${greeting}, `}\n                <form id = \"underlined-form-user\" onSubmit = {(e) => {\n                        e.preventDefault();\n                        this.setState({\n                            updateCurrentUser: false,\n                            renderDropdown: false,\n                        });\n                        this.props.setUser(this.state.currentUser);\n                    }\n                }>\n                <input id=\"form-input-user\" placeholder = {this.state.currentUser} onChange={(e) => this.setState({currentUser: e.target.value})}></input>\n            </form>\n                <button id=\"more-options\" onClick={() => this.setState({renderDropdown: !this.state.renderDropdown})}> ••• </button>\n            </h3>\n        )       \n    }\n\n    render() {\n        return (\n            <div id=\"greeting-clock-div\">\n                {this.state.isMounted ? <Time greet={this.greet}/> : null}\n                {this.state.updateCurrentUser ? this.renderGreetingWithForm() : this.renderGreeting() }\n                {this.state.renderDropdown ? this.renderDropdown() : null}\n            </div>\n        )\n    }\n\n}\n\nexport default Clock;","import React from 'react';\n\nclass FocusForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            focus: '',\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"focus-form-div\">\n                {this.state.tasks ? <p>True</p> : <h3 className=\"form-text-header\">What's your main focus for today?</h3>}\n                <form id=\"underlined-form\" onSubmit={(e) => {\n                    e.preventDefault();\n                    this.props.setMainFocus(this.state.focus);\n                }}>\n                    <input id=\"form-input\" onChange={(e) => this.setState({focus: e.target.value})}></input>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default FocusForm;","import React from 'react';\n\n\nclass Focus extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            completed: false,\n            mainFocus: this.props.mainFocus,\n        }\n    }\n    \n   render() {\n       const mainFocus = this.state.mainFocus;\n        return (\n        <div id=\"focus-div\">\n            <h4 className=\"focus-text-header\">TODAY</h4>\n            <div id=\"main-focus-item-div\">\n                <button id=\"main-focus-mark-complete\" onClick={() => this.setState({completed: !this.state.completed})}></button>\n                <h3 id={this.state.completed ? \"main-focus-text-completed\": \"main-focus-text\"}>{mainFocus}</h3>\n                <button id=\"main-focus-delete\" onClick={() => this.props.setMainFocus(\"\")}>X</button>\n            </div>\n        </div>\n    )\n   }\n}\n\nexport default Focus;","import React from 'react';\nimport Time from './Time';\n\nconst Welcome = props => {\n    \n    let name = '';\n    \n    return (\n        <div id=\"welcome-screen\">\n            <Time />\n            <form id=\"underlined-form\" onSubmit={(e) => {\n                    e.preventDefault();\n                    props.setUser(name);\n                }}>\n                <label className=\"form-text-header\">Hello, welcome to Impetus. What's your name?</label>\n                <br/>\n                <input id=\"form-input\" onChange={(e) => name = e.target.value}></input>\n            </form>\n        </div>\n    );\n}\n\nexport default Welcome;","import React from 'react';\n\nconst api = \"65125f4adb812bcb9937ba4b637de4b7\";\nconst url = \"http://api.openweathermap.org/data/2.5/weather?q=Chicago,us&appid=\" + api;\n\nconst weatherObj = JSON.parse(localStorage.getItem('weather'));\nclass Weather extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: '',\n            temp: '',\n            weatherDesc: '',\n        }\n    }\n\n    fetchWeather = () => {\n        fetch(url)\n        .then(resp => resp.json())\n        .then(json => {\n            const temp = this.convertToFahrenheit(json.main.temp) + 'º';\n            const weatherDesc = this.formatDesc(json.weather[0].description);\n            const location = json.name;\n            this.setState({location, temp, weatherDesc});\n            // localStorage.setItem('weather', this.state);\n        });\n    }\n\n    convertToFahrenheit = temp => {\n        return Math.floor((temp - 273.15) * 9 / 5 + 32);\n    }\n    \n    formatDesc = desc => {\n        return desc.split(' ').map(word => word[0].toUpperCase() + word.substring(1)).join(' ');\n    }\n\n    componentDidMount() {\n        if (!weatherObj) {\n           this.fetchWeather();\n        } else {\n            this.setState(weatherObj);\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"weather-div\">\n                <h2 id=\"weather-temp\">{this.state.temp}</h2>\n                <h3 id=\"weather-location\">{this.state.location}</h3>\n                <h4 id=\"weather-desc\">{this.state.weatherDesc}</h4>\n            </div>\n        )\n}\n    }\n\n\nexport default Weather;","import React from 'react';\n\nconst apiKey = 'baf5fb44732fcb83d8c6d37602e28058642c845445f15ae70c3a1eb7bd80f547';\nconst url = 'https://api.unsplash.com/photos/random/?client_id=' + apiKey;\n\nclass Background extends React.Component {\n    \n    state = {\n        photographer: '',\n        imgUrl: '',\n    }\n\n    getPhoto = () => {\n        fetch(url)\n            .then(resp => resp.json())\n            .then(json => {\n                localStorage.setItem('backgroundUrl', json.urls.full);\n                this.setState({\n                    imgUrl: json.urls.full,\n                    photographer: json.user.name,\n                });\n            })\n    }\n\n    componentDidMount() {\n        this.getPhoto();\n    }\n\n    render() {\n        return (\n            <img src={this.state.imgUrl} alt={`Background image photographed by ${this.state.photographer}`} />\n        )   \n    }\n}\n\n\nexport default Background;","/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport './App.css';\n// import valley from './photos/valley.jpg';\nimport Clock from './components/Clock';\nimport FocusForm from './components/FocusForm';\nimport Focus from './components/Focus';\nimport Welcome from './components/Welcome';\nimport Weather from './components/Weather';\nimport Background from './components/Background';\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: '',\n    mainFocus: '',\n    promptUserName: false,\n  }\n\n  retreiveUser = () => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      this.setState({currentUser: user});\n    } else {\n      this.setState({promptUserName: true});\n    }\n  }\n\n  setUser = name => {\n    localStorage.setItem('user', name);\n     this.setState({\n      currentUser: name,\n      promptUserName: false,\n    });\n  }\n\n  promptUserName = () => {\n    this.setState({promptUserName: !this.state.promptUserName});\n  }\n\n  setMainFocus = mainFocus => {\n    this.setState({ mainFocus })\n  }\n\n  componentDidMount() {\n    this.retreiveUser();\n  }\n\n  renderFocusForm() {\n    if (this.state.promptUserName) {\n      return null;\n    } \n    return this.state.mainFocus ? <Focus mainFocus = {\n      this.state.mainFocus\n    }\n    setMainFocus = {\n      this.setMainFocus\n    }\n    /> : <FocusForm setMainFocus={this.setMainFocus} />\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <div id=\"sub-container\">\n          <Background/>\n          <Weather />\n        </div>\n        <div id=\"top-container\">\n          {\n            this.state.promptUserName ? <Welcome setUser = {\n              this.setUser\n            }\n            /> : <Clock currentUser={this.state.currentUser} setUser={this.setUser} />\n          }\n          {this.renderFocusForm()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}